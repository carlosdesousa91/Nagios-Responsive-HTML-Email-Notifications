#!/usr/bin/env /opt/rh/rh-php71/root/usr/bin/php

/*******************************************************************************

Author: Heini Holm Andersen
Version: 2.1.2
Build: 1011
First release created on: 20 March 2015
Latest build created on: 25 September 2017
Purpose: For sending out responsive and easy to read email alert notifications.
--------------------------------------------------------------------------------
Requirements:

 1. Copy the php-html-email folder to the Nagios plugins directory and make sure all files are owned by the nagios user and also that they are executable!
 2. For the host and services notification alerts, please add these lines to your Nagios commands list:

    # 'notify-host-by-email-html' command definition
      define command {
        	command_name	notify-host-by-email-html
      command_line    $USER1$/php-html-email/nagios_host_mail "$NOTIFICATIONTYPE$" "$HOSTNAME$" "$HOSTALIAS$" "$HOSTSTATE$" "$HOSTADDRESS$" "$HOSTOUTPUT$" "$SHORTDATETIME$" "$CONTACTEMAIL$" "$TOTALHOSTSUP$" "$TOTALHOSTSDOWN$" "$NOTIFICATIONAUTHOR$" "$NOTIFICATIONCOMMENT$" "$LONGDATETIME$" "$HOSTDURATION$" "$HOSTDURATIONSEC$" "$LASTHOSTCHECK$" "$LASTHOSTSTATECHANGE$" "$NOTIFICATIONISESCALATED$" "$HOSTATTEMPT$" "$MAXHOSTATTEMPTS$" "$NOTIFICATIONRECIPIENTS$"
      }

    # 'notify-service-by-email-html' command definition
      define command {
          command_name	notify-service-by-email-html
      command_line	$USER1$/php-html-email/nagios_service_mail "$NOTIFICATIONTYPE$" "$HOSTNAME$" "$HOSTALIAS$" "$HOSTSTATE$" "$HOSTADDRESS$" "$SERVICEOUTPUT$" "$SHORTDATETIME$" "$SERVICEDESC$" "$SERVICESTATE$" "$CONTACTEMAIL$" "$SERVICEDURATIONSEC$" "$SERVICEEXECUTIONTIME$" "$TOTALSERVICESWARNING$" "$TOTALSERVICESCRITICAL$" "$TOTALSERVICESUNKNOWN$" "$LASTSERVICEOK$" "$LASTSERVICEWARNING$" "$SERVICENOTIFICATIONNUMBER$" "$LONGSERVICEOUTPUT$" "$NOTIFICATIONAUTHOR$" "$NOTIFICATIONCOMMENT$" "$SERVICEDURATION$" "$NOTIFICATIONISESCALATED$" "$SERVICEATTEMPT$" "$MAXSERVICEATTEMPTS$" "$NOTIFICATIONRECIPIENTS$"
      }

 3. Add the command names to your contact notifications settings, like seen below:
    service_notification_commands	notify-service-by-email-html
    host_notification_commands	notify-host-by-email-html

*******************************************************************************/

<?php

require_once dirname(__FILE__) . '/PHPMailer/PHPMailerAutoload.php';

/* Arguments containing Nagios Alert/Notification Info */
array_shift($argv);
$f_notify_type =array_shift($argv);  /*1*/
$f_host_name =array_shift($argv);    /*2*/
$f_host_alias =array_shift($argv);   /*3*/
$f_host_state =array_shift($argv);    /*4*/
$f_host_address =array_shift($argv);   /*5*/
$f_serv_output =array_shift($argv);   /*6*/
$f_long_datetime =array_shift($argv);     /*7*/
$f_serv_desc  =array_shift($argv);    /*8*/
$f_serv_state  =array_shift($argv);   /*9*/
$f_to  =array_shift($argv);           /*10*/
$f_duration = round((array_shift($argv))/60,2);   /*11*/
$f_exectime =array_shift($argv);       /*12*/
$f_totwarnings =array_shift($argv);     /*13*/
$f_totcritical =array_shift($argv);      /*14*/
$f_totunknowns =array_shift($argv);     /*15*/
$f_lastserviceok = array_shift($argv);    /*16*/
$f_lastwarning = array_shift($argv);     /*17*/
$f_attempts= array_shift($argv);     /*18*/
$f_serv_long_output =array_shift($argv);   /*19*/
$f_ackauthor= array_shift($argv);     /*20*/
$f_ackcomment= array_shift($argv);     /*21*/
$f_serv_duration= array_shift($argv);     /*22*/
$f_notification_escalation_state= array_shift($argv);     /*23*/
$f_service_attempt_state= array_shift($argv);     /*24*/
$f_max_service_attempt_state= array_shift($argv);     /*25*/
$f_all_recipients= array_shift($argv);  /*26*/
$f_all_contact_email= array_shift($argv);  /*28*/
$f_all_contact_add1= array_shift($argv);  /*29*/
$f_all_contact_add2= array_shift($argv);  /*30*/
$f_all_contact_add3= array_shift($argv);  /*31*/
$f_all_contact_add4= array_shift($argv);  /*32*/
$f_all_contact_add5= array_shift($argv);  /*33*/
$f_all_contact_add6= array_shift($argv);  /*34*/

$f_downwarn = $f_duration;
$f_date_year = date("Y");

/* Defaults */
$f_color="#5D6D7E";
$f_ackauthor_desc="Acknowledged Author:";
$f_ackcomment_desc="Acknowledged Comment:";

/* Build type of alert */
if($f_notify_type=="PROBLEM") {
  $f_color="#FF0000";
  $f_ackauthor_desc="Acknowledged Author:";
  $f_ackcomment_desc="Acknowledged Comment:";
}
if($f_notify_type=="PROBLEM" && $f_serv_state=="CRITICAL") {
  $f_color="#FF0000";
  $f_ackauthor_desc="Acknowledged Author:";
  $f_ackcomment_desc="Acknowledged Comment:";
}
if($f_notify_type=="PROBLEM" && $f_serv_state=="WARNING") {
  $f_color="#FFBF00";
  $f_ackauthor_desc="Acknowledged Author:";
  $f_ackcomment_desc="Acknowledged Comment:";
}
if($f_notify_type=="RECOVERY") {
  $f_color="#00FF00";
  $f_ackauthor_desc="Acknowledged Author:";
  $f_ackcomment_desc="Acknowledged Comment:";
}
if($f_notify_type=="ACKNOWLEDGEMENT") {
  $f_color="#AEB6BF";
  $f_ackauthor_desc="Acknowledged Author:";
  $f_ackcomment_desc="Acknowledged Comment:";
}
if($f_notify_type=="FLAPPINGSTART") {
  $f_color="#800000";
  $f_ackauthor_desc="Flapping Author:";
  $f_ackcomment_desc="Flapping Comment:";
}
if($f_notify_type=="FLAPPINGSTOP") {
  $f_color="#008000";
  $f_ackauthor_desc="Flapping Author:";
  $f_ackcomment_desc="Flapping Comment:";
}
if($f_notify_type=="FLAPPINGDISABLED") {
  $f_color="#F7FE2E";
  $f_ackauthor_desc="Flapping Author:";
  $f_ackcomment_desc="Flapping Comment:";
}
if($f_notify_type=="DOWNTIMESTART") {
  $f_color="#5DADE2";
  $f_ackauthor_desc="Scheduled Downtime by:";
  $f_ackcomment_desc="Comment for Scheduled Downtime:";
}
if($f_notify_type=="DOWNTIMEEND") {
  $f_color="#48C9B0";
  $f_ackauthor_desc="Scheduled Downtime by:";
  $f_ackcomment_desc="Comment for Scheduled Downtime:";
}
if($f_notify_type=="DOWNTIMECANCELLED") {
  $f_color="#AF7AC5";
  $f_ackauthor_desc="Scheduled Downtime by:";
  $f_ackcomment_desc="Comment for Scheduled Downtime:";
}
if($f_notify_type=="CUSTOM") {
  $f_color="#5D6D7E";
  $f_ackauthor_desc="Custom Author:";
  $f_ackcomment_desc="Custom Comment:";
}

/* Modify the long service output so line breaks can work if present in the output */
$f_serv_long_output = str_replace('\n', '<br />',$f_serv_long_output);

/* Check if service output is long */
if($f_serv_long_output!="") {$f_line_break='<br>';}

/* Check if acknowledgement is present and if so, then add HTML code */
if($f_ackauthor!="" && $f_ackcomment!=""){
  $f_ackauthor_status = '
    <h4 style="font-family: CoconPro-BoldCond, Open Sans, Verdana, sans-serif; margin:0; font-size:15px; color:#b0b0b0; padding-left:3%;text-decoration:underline;">' . $f_ackauthor_desc . '</h4>
    <h2 style="font-family: CoconPro-BoldCond, Open Sans, Verdana, sans-serif; margin:0; font-size:20px; padding-left:5%;">' . $f_ackauthor . '</h2>
  ';

  $f_ackcomment_status = '
    <h4 style="font-family: CoconPro-BoldCond, Open Sans, Verdana, sans-serif; margin:0; font-size:15px; color:#b0b0b0; padding-left:3%;text-decoration:underline;">' . $f_ackcomment_desc . '</h4>
    <h2 style="font-family: CoconPro-BoldCond, Open Sans, Verdana, sans-serif; margin:0; font-size:20px; padding-left:5%;">' . $f_ackcomment . '</h2>
  ';

  $f_ackauthor_status_none_html = $f_ackauthor_desc;
  $f_ackauthor_status_none_html .= ' ';
  $f_ackauthor_status_none_html .=  $f_ackauthor;

  $f_ackcomment_status_none_html = $f_ackcomment_desc;
  $f_ackcomment_status_none_html .= ' ';
  $f_ackcomment_status_none_html .= $f_ackcomment;
}

/* Check if acknowledgement is present and if so, then add HTML code */
if($f_notification_escalation_state==0){
  $f_notification_escalation_state_status = '
    <h4 style="font-family: CoconPro-BoldCond, Open Sans, Verdana, sans-serif; margin:0; font-size:15px; color:#b0b0b0; padding-left:3%;text-decoration:underline;">Incident Escalated:</h4>
    <h2 style="font-family: CoconPro-BoldCond, Open Sans, Verdana, sans-serif; margin:0; font-size:20px; padding-left:5%;">No</h2>
  ';

  $f_notification_escalation_state_status_none_html = 'Incident Escalated: No';
}

if($f_notification_escalation_state==1){
  $f_notification_escalation_state_status = '
    <h4 style="font-family: CoconPro-BoldCond, Open Sans, Verdana, sans-serif; margin:0; font-size:15px; color:#b0b0b0; padding-left:3%;text-decoration:underline;">Incident Escalated:</h4>
    <h2 style="font-family: CoconPro-BoldCond, Open Sans, Verdana, sans-serif; margin:0; font-size:20px; padding-left:5%;">Yes</h2>
  ';

  $f_notification_escalation_state_status_none_html = 'Incident Escalated: Yes';
}

/* Build the Nagios alert/notification, email body/content */
/* NONE HTML EMAIL CONTENT */
$message = '
***** Nagios *****

Notification Type: ' .$f_notify_type. '
Service: ' .$f_serv_desc. '
Hostname: ' .$f_host_name. '
Hostalias: ' .$f_host_alias. '
State: ' .$f_serv_state. '
Address: ' .$f_host_address. '
Date/Time: ' .$f_long_datetime. '
' .$f_notification_escalation_state_status_none_html. '
' .$f_ackauthor_status_none_html. '
' .$f_ackcomment_status_none_html. '

Info:
' .$f_serv_output. '
' .$f_serv_long_output. '
';

/* HTML EMAIL CONTENT */
$HTMLmessage = '

<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">
<head>
    <meta charset="utf-8">
    <meta name="description" content="Nagios Email Notification Alert">
    <meta name="viewport" content="width=device-width">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="x-apple-disable-message-reformatting">
    <title>' . $f_host_alias . ' / ' . $f_serv_desc . '</title>

    <!--[if mso]>
        <style>
            * {
                font-family: sans-serif !important;
            }
        </style>
    <![endif]-->

    <!--[if !mso]><!-->
        <link href="https://font.internet.fo/stylesheet.css" rel="stylesheet" type="text/css">
        <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
    <!--<![endif]-->

    <style>

        html,
        body {
            margin: 0 auto !important;
            padding: 0 !important;
            height: 100% !important;
            width: 100% !important;
        }

        * {
            -ms-text-size-adjust: 100%;
            -webkit-text-size-adjust: 100%;
        }

        div[style*="margin: 16px 0"] {
            margin:0 !important;
        }

        table,
        td {
            mso-table-lspace: 0pt !important;
            mso-table-rspace: 0pt !important;
        }

        table {
            border-spacing: 0 !important;
            border-collapse: collapse !important;
            table-layout: fixed !important;
            margin: 0 auto !important;
        }
        table table table {
            table-layout: auto;
        }

        img {
            -ms-interpolation-mode:bicubic;
        }

        *[x-apple-data-detectors],	/* iOS */
        .x-gmail-data-detectors, 	/* Gmail */
        .x-gmail-data-detectors *,
        .aBn {
            border-bottom: 0 !important;
            cursor: default !important;
            color: inherit !important;
            text-decoration: none !important;
            font-size: inherit !important;
            font-family: inherit !important;
            font-weight: inherit !important;
            line-height: inherit !important;
        }

        .a6S {
	        display: none !important;
	        opacity: 0.01 !important;
        }
        img.g-img + div {
	        display:none !important;
	   	}

        .button-link {
            text-decoration: none !important;
        }

        @media only screen and (min-device-width: 375px) and (max-device-width: 413px) { /* iPhone 6 and 6+ */
            .email-container {
                min-width: 375px !important;
            }
        }

    </style>

    <style>

        .button-td,
        .button-a {
            transition: all 100ms ease-in;
        }
        .button-td:hover,
        .button-a:hover {
            background: #555555 !important;
            border-color: #555555 !important;
        }

        @media screen and (max-width: 600px) {

			.email-container p {
				font-size: 17px !important;
				line-height: 22px !important;
			}

		}

	</style>

	<!--[if gte mso 9]>
	<xml>
		<o:OfficeDocumentSettings>
			<o:AllowPNG/>
			<o:PixelsPerInch>96</o:PixelsPerInch>
		</o:OfficeDocumentSettings>
	</xml>
	<![endif]-->

</head>
<body width="100%" bgcolor="#f6f6f6" style="margin: 0;line-height:1.4;padding:0;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;">
	<center style="width: 100%; background: #f6f6f6; text-align: left;">

		<div style="display:none;font-size:1px;line-height:1px;max-height:0px;max-width:0px;opacity:0;overflow:hidden;mso-hide:all;font-family: sans-serif;">
			[' .$f_notify_type. '] Service: ' .$f_serv_desc. ' on Host: ' .$f_host_alias. ' (' .$f_host_name. ') is ' .$f_serv_state. '. ***************************************************************************************************************************************
		</div>

		<div style="max-width: 600px; padding: 10px 0; margin: auto;" class="email-container">
			<!--[if mso]>
			<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="600" align="center">
			<tr>
			<td>
			<![endif]-->

			<table role="presentation" cellspacing="0" cellpadding="0" border="0" align="center" width="95%" style="max-width: 600px;">
				<tr>
					<td bgcolor="#ffffff" style="border-collapse:separate;mso-table-lspace:0pt;mso-table-rspace:0pt;width:100%;-webkit-border-top-right-radius: 25px;-webkit-border-top-left-radius: 25px;-moz-border-top-right-radius: 25px;-moz-border-top-left-radius: 25px;border-top-right-radius: 25px;border-top-left-radius: 25px;-webkit-border-bottom-right-radius: 25px;-webkit-border-bottom-left-radius: 25px;-moz-border-bottom-right-radius: 25px;-moz-border-bottom-left-radius: 25px;border-bottom-right-radius: 25px;border-bottom-left-radius: 25px;">
            <table role="presentation" border="0" cellpadding="0" cellspacing="0" width="100%" align="center" style="border-collapse:separate;mso-table-lspace:0pt;mso-table-rspace:0pt;width:100%;-webkit-border-top-right-radius: 25px;-webkit-border-top-left-radius: 25px;-moz-border-top-right-radius: 25px;-moz-border-top-left-radius: 25px;border-top-right-radius: 25px;border-top-left-radius: 25px;">
                <tbody>

                 <!-- linha colorida -->
                  <tr>
                    <td style="background-color:' .$f_color. ';">
                      <h1 style="font-family: CoconPro-BoldCond, Open Sans, Verdana, sans-serif; padding:0; margin:10px; color:#ffffff; text-align:center;">' . $f_notify_type .  '-' . $f_host_alias . '-' . $f_serv_desc . '-' . $f_serv_state .'</h1>
                    </td>
                  </tr>

                </tbody>
            </table>
           
 					</td>
				</tr>
			</table>
      
			<!--[if mso]>
			</td>
			</tr>
			</table>
			<![endif]-->
		</div>

    </center>
</body>
</html>
';

$mail = new PHPMailer;
//$mail->SMTPDebug = 3; // Enable verbose debug output
$mail->isSMTP(); // Set mailer to use SMTP
$mail->Host = 'localhost';	// Specify main and backup SMTP servers
$mail->SMTPAuth = false; // Enable SMTP authentication

$username = exec('whoami');
$hostname= gethostname ();
$mail->From =($username."@".$hostname);
$mail->FromName = 'NocPro';
$mail->addAddress($f_all_contact_email);// Add a recipient + Name is optional "$mail->addAddress('joe@example.net    ', 'Joe User');"
$mail->addAddress($f_all_contact_add1);
$mail->addAddress($f_all_contact_add2);
$mail->addAddress($f_all_contact_add3);
$mail->addAddress($f_all_contact_add4);
$mail->addAddress($f_all_contact_add5);
$mail->addAddress($f_all_contact_add6);

$mail->isHTML(true); // Set email format to HTML
$mail->WordWrap = 50; // Set word wrap to 50 characters

$mail->Subject = '*** '.$f_notify_type.': '.$f_serv_desc.' on '.$f_host_name.' is '.$f_serv_state.' ***';
$mail->AltBody = $message;
$mail->Body = $HTMLmessage;

if(!$mail->send()) {
	echo 'Message could not be sent.<br>';
	echo 'Mailer Error: ' . $mail->ErrorInfo . '<br>';
} else {
	echo 'Message has been sent<br>';
}

?>
